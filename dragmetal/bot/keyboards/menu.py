from aiogram.utils.callback_data import CallbackData
from django.conf import settings
from slugify import slugify
from dragmetal.bot.keyboards.list_btn import ListOfButtons
from dragmetal.models import PreciousMetal, UserBot
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

btn_create_user = ListOfButtons(text=['–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚è©'], callback=['register']).inline_keyboard
btn_privacy_user = ListOfButtons(text=['–ü—Ä–∏–Ω—è—Ç—å'], callback=['privacy']).inline_keyboard
btn_menu = ListOfButtons(text=['–°–∫–ª–∞–¥', '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', '–ü—Ä–æ–¥–∞—Ç—å'], callback=['stock', 'calculator', 'sell'],
                         align=[2, 1]).inline_keyboard
btn_add_menu = ListOfButtons(text=['–î–æ–±–∞–≤–∏—Ç—å', '–ù–∞–∑–∞–¥ ‚è™'], callback=['add', 'menu']).inline_keyboard
btn_confirm = ListOfButtons(text=['–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', '–ù–∞–∑–∞–¥ ‚è™'], callback=['confirm', 'menu'], align=[2]).inline_keyboard
btn_ordering = ListOfButtons(text=['–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', '–ù–∞–∑–∞–¥ ‚è™'],
                             callback=['ordering', 'add_to_basket', 'menu'], align=[2, 1]).inline_keyboard
btn_add_rm_menu = ListOfButtons(text=['–î–æ–±–∞–≤–∏—Ç—å', '–£–¥–∞–ª–∏—Ç—å', '–ù–∞–∑–∞–¥ ‚è™'],
                                callback=['add', 'remove', 'menu'], align=[2, 1]).inline_keyboard
btn_menu_back = ListOfButtons(text=['–ù–∞–∑–∞–¥ ‚è™'], callback=['menu']).inline_keyboard
# btn_reject_menu_back = ListOfButtons(text=['–û—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ –∏ –ù–∞–∑–∞–¥ ‚è™'], callback=['menu']).inline_keyboard
btn_stock = ListOfButtons(text=['–°–∫–ª–∞–¥', '–ù–∞–∑–∞–¥ ‚è™'], callback=['stock', 'menu'], align=[2]).inline_keyboard
btn_order_complete = ListOfButtons(text=['–û—Ç–ø—Ä–∞–≤–∏—Ç—å', '–ù–∞–∑–∞–¥ ‚è™'], callback=['send', 'menu'], align=[2]).inline_keyboard
btn_basket_continue = ListOfButtons(text=['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', '–ù–∞–∑–∞–¥ ‚è™'],
                                    callback=['continue', 'ordering', 'menu'], align=[2, 1]).inline_keyboard
btn_geo = KeyboardButton(text='GIS', request_location=True)
geo_markup = ReplyKeyboardMarkup(resize_keyboard=True).add(btn_geo)


def btn_metal_menu(command: str = ''):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Ç–∞–ª–ª–æ–≤"""
    texts = [i.name for i in PreciousMetal.objects.all()]
    callbacks = [slugify(f"{command} {i.name}") for i in PreciousMetal.objects.all()]
    texts.append('–ù–∞–∑–∞–¥ ‚è™')
    callbacks.append('menu')
    return ListOfButtons(text=texts, callback=callbacks).inline_keyboard


def btn_users_metal(user: UserBot, command: str):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –º–µ—Ç–∞–ª–ª–æ–≤,
    –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç—Å—è –Ω–∞ —Å–∫–ª–∞–¥–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    precious = set(i.sample.precious for i in user.users_stock.all())
    texts = [i.name for i in precious]
    callbacks = [slugify(f"{command} {i.name}") for i in precious]
    texts.append('–ù–∞–∑–∞–¥ ‚è™')
    callbacks.append('menu')
    return ListOfButtons(text=texts, callback=callbacks).inline_keyboard


def btn_samples(call_data: str, command: str):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –º–µ—Ç–∞–ª–ª–∞"""
    ending = call_data.split('-')[-1]
    for metal in PreciousMetal.objects.all():
        if slugify(metal.name) == ending:
            texts = [i.sample for i in metal.sample.all()]
            callbacks = [slugify(f"{i.sample} {command}") for i in metal.sample.all()]
            texts.append('–ù–∞–∑–∞–¥ ‚è™')
            callbacks.append('menu')
            return ListOfButtons(text=texts, callback=callbacks).inline_keyboard


def btn_users_sample(user: UserBot, call_data: str, command: str):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –ø—Ä–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –º–µ—Ç–∞–ª–ª–∞ —É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    samples = [i.sample for i in user.users_stock.all() if slugify(i.sample.precious.name) in call_data]
    texts = [i.sample for i in samples]
    callbacks = [slugify(f"{i.sample} {command}") for i in samples]
    texts.append('–ù–∞–∑–∞–¥ ‚è™')
    callbacks.append('menu')
    return ListOfButtons(text=texts, callback=callbacks).inline_keyboard


about_callback = CallbackData('about_project', 'section')
btn_url = ListOfButtons(text=['Instagram', '–ö–∞–Ω–∞–ª SmartGift'],
                        callback=['url:https://instagram.com/smartgift.official?igshid=YmMyMTA2M2Y=',
                                  'url:https://t.me/SmartGift_company']).inline_keyboard

btn_user_type = ListOfButtons(text=['–Æ—Ä. –ª–∏—Ü–æ', '–§–∏–∑. –ª–∏—Ü–æ'], callback=['entity', 'physical']).inline_keyboard

btn_wallet = ListOfButtons(text=['–ú–µ–Ω—é üåê', '–í–í–û–î üè¶', '–í–´–í–û–î üí∞'],
                           callback=['menu', 'ENTER', 'CONCLUSION'], align=[1, 2]).inline_keyboard
btn_presentation = ListOfButtons(text=['–ú–µ–Ω—é üåê', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å'],
                                 callback=['menu', 'url:https://yandex.ru/']).inline_keyboard


def btn_program(url_ref): return ListOfButtons(
    text=['–ú–µ–Ω—é üåê', '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞', '–ú–æ—è –∫–æ–º–∞–Ω–¥–∞ üë•'],
    callback=['menu', 'invite', f'url:{settings.HOST_NAME}tree/{url_ref}'], align=[2, 1]).inline_keyboard


btn_success = ListOfButtons(text=['–ú–µ–Ω—é üåê', '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚è©'], callback=['menu', 'true']).inline_keyboard
btn_creat_wallet = ListOfButtons(text=['–ú–µ–Ω—é üåê', '–°–æ–∑–¥–∞—Ç—å ‚úÖ'], callback=['menu', 'true']).inline_keyboard
btn_enter_wallet = ListOfButtons(text=['–ì–æ—Ç–æ–≤–æ ‚úÖ', '–£–¥–∞–ª–∏—Ç—å ‚ùå'],
                                 callback=['menu', 'wallet|delete']).inline_keyboard
# wallet|ready –≥–æ—Ç–æ–≤ –∫ –≤—ã–≤–æ–¥—É
btn_del_wallet = ListOfButtons(text=['–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', '–û—Ç–º–µ–Ω–∞'],
                               callback=['del|ready', 'del|cancellation']).inline_keyboard


def btn_back(call): return ListOfButtons(text=['–ù–∞–∑–∞–¥‚è™'], callback=[call]).inline_keyboard


def btn_table(data):
    text = []
    callback = []
    for i in data:
        text.append(i.name)
        callback.append(f'GiftType_{i.id}')
    return ListOfButtons(text=text + ['–ù–∞–∑–∞–¥‚è™'], callback=callback + ['–í—ã–±—Ä–∞—Ç—å —Å—Ç–æ–ª']).inline_keyboard


def about_markup(checked=''):
    texts = ['–°—Ç–æ–ª—ã –∏ –†–æ–ª–∏', '–î–∞—Ä–∏—Ç–µ–ª—å', '–ü–∞—Ä—Ç–Ω–µ—Ä', '–ú–µ–Ω—Ç–æ—Ä', '–ú–∞—Å—Ç–µ—Ä']
    btn_about = ListOfButtons(text=[i if i != checked else i + 'üëÅÔ∏è' for i in texts],
                              callback=[about_callback.new('–°—Ç–æ–ª—ã –∏ –†–æ–ª–∏'),
                                        about_callback.new('–î–∞—Ä–∏—Ç–µ–ª—å'),
                                        about_callback.new('–ü–∞—Ä—Ç–Ω–µ—Ä'),
                                        about_callback.new('–ú–µ–Ω—Ç–æ—Ä'),
                                        about_callback.new('–ú–∞—Å—Ç–µ—Ä')], align=[1, 2, 2]).inline_keyboard
    return btn_about
